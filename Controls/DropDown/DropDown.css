div.FitUiControlDropDown
{
	min-width: 50px; /* In case width is set to 100% and control is squeezed */
	text-align: left; /* To prevent incorrect rendering if parent contain has text-align:right */
	/*vertical-align: bottom;*/ /* Moved to div.FitUiControl */ /* Overflow:hidden (div.FitUiControlDropDownItems) changes the baseline for inline-block elements - see CSS specification (scroll to bottom): https://www.w3.org/TR/CSS2/visudet.html#propdef-vertical-align */
}

div.FitUiControlDropDownItems /* Item container */
{
	min-height: 2em; /* Equal height for all controls */
	min-height: 0\9; /* Undo equal height for all controls in IE9 and below - assume height of content in legacy IE which otherwise does not render control properly */
	border: 0.065em solid #BBBBBB;
	border-width: 1px\9;
	border-radius: 2px;
	padding: 0.1em;
	padding-left: 0.3em; /* Ensure consistent indentation for input text compared to e.g. Input and DatePicker */
	padding-right: 2em; /* Compensate for drop down arrow button to avoid items being partially hidden behind it */
	background-color: white;
	cursor: text;
	white-space: normal; /* Make sure items wrap properly if used in container with nowrap */
	position: relative; /* Allow absolute positioning of arrow icon within item container */
	overflow: hidden; /* Prevent large items from overflowing boundaries, in case of tiny control width */
}
div.FitUiControlDropDown[data-focused="true"][data-device="Phone"] div.FitUiControlDropDownItems,
div.FitUiControlDropDown[data-focused="true"][data-device="Tablet"] div.FitUiControlDropDownItems
{
	/* Make it obvious that a drop down has focus in
	   case the menu is closed and no input field has focus.
	   This will be the case when removing items using the delete
	   button on an item, without focusing the control first. */
	border: 0.07em solid #1C74CE;
}
div.FitUiControlDropDownItems:focus /* Remove outline when focus is temporarily assigned to prevent DropDown from losing focus */
{
	outline: none;
}

div.FitUiControlDropDownItems > i /* Box surrounding arrow icon */
{
	position: absolute;
	top: 0px;
	bottom: 0px;
	right: 0px;
	width: 2em;
	background-color: white;
	border-top-right-radius: 4px;
	border-bottom-right-radius: 4px;
	border-left: 0.065em solid #BBBBBB;
	border-left-width: 1px\9;
	cursor: pointer;
}
div.FitUiControlDropDownItems > i:before
{
	/* Position arrow icon */
	position: absolute;
	top: 50%;
	margin-top: -0.5em;
	margin-left: 0.5em;
}
div.FitUiControlDropDownItems > i.fa-spin
{
	/* WSDropDown: Disable border and background when arrow icon is turned
	   into a spinning loading indicator, when communicating with the WebService. */
	border: none;
	background-color: transparent;
}
div.FitUiControlDropDownItems > i:focus /* Remove outline when focus is assigned to prevent DropDown from losing focus on mobile */
{
	outline: none;
}

div.FitUiControlDropDownItems > span /* Selection container */
{
	display: inline-block;
	white-space: nowrap;
	margin-top: 0.05em;
	margin-bottom: 0.05em;

	/* Equal height for all controls not enabled in legacy IE where controls assume height of content instead - apply alternative margins */
	margin-top: 0.1em\9;
	margin-bottom: 0.1em\9;

	/* Make sure selection container does not exceed control boundaries */
	max-width: calc(100% - 0.3em); /* 0.3em = padding-left in div.FitUiControlDropDownItems */
	max-width: 90%\9; /* IE8 does not support calc(..) */

	/* Make room for left and right side input fields which are positioned in padding area using negative margin */
	padding-left: 5px;
	padding-right: 5px;
}
div.FitUiControlDropDown[data-multiselect="true"] div.FitUiControlDropDownItems > span /* Selection container */
{
	margin-top: 0.1em;
	margin-bottom: 0.1em;
}
div.FitUiControlDropDownItems > span:focus /* Remove outline when focus is temporarily assigned to prevent DropDown from losing focus */
{
	outline: none;
}

div.FitUiControlDropDownItems > span > span /* Selection */
{
	/* Make sure text in selected items is truncated if it is too wide */
	display: inline-block;
	width: 100%;
	overflow: hidden;
	text-overflow: ellipsis;

	/* Vertically align with left and right side input fields */
	vertical-align: middle;

	/* Allow positioning of delete button which is placed in padding area */
	position: relative;
	padding-right: 1.5em;
}

div.FitUiControlDropDown[data-multiselect="true"] div.FitUiControlDropDownItems > span > span /* Selection (in multi selection mode only) */
{
	padding-top: 0.15em;
	padding-left: 0.25em;
	padding-bottom: 0.25em;
	border: 0.065em solid silver;
	border-width: 1px\9;
	border-radius: 2px;
	background-color: whitesmoke;
}

div.FitUiControlDropDown[data-multiselect="true"] div.FitUiControlDropDownItems > span,
div.FitUiControlDropDown[data-multiselect="true"] div.FitUiControlDropDownItems > input,
div.FitUiControlDropDown[data-multiselect="true"] div.FitUiControlDropDownHidden /* Used to calculate width of content for input fields */
{
	font-size: 0.85em;
}

div.FitUiControlDropDownItems > span > span.FitUiControlDropDownInvalid /* Invalid selection */
{
	background-color: #F5B8B8;
}

div.FitUiControlDropDownItems > span > span > i /* Delete button */
{
	color: #CCCCCC;
	cursor: pointer;

	/* Take out of flow so delete button doesn't get truncated due to text-overflow - position in right side padding area */
	position: absolute;
	top: 0.15em;
	right: 0.35em;
}
div.FitUiControlDropDown[data-multiselect="true"] div.FitUiControlDropDownItems > span > span > i /* Delete button */
{
	/* Adjust for smaller font-size in Multi Selection Mode */
	top: 0.375em;
}
/*div.FitUiControlDropDown[data-multiselect="false"] div.FitUiControlDropDownItems > span > span > i*/ /* Delete button in selection (in single selection mode only) */
/*{
	display: none;
}*/
div.FitUiControlDropDownItems > span > span > i:focus /* Remove outline when focus is temporarily assigned to prevent DropDown from losing focus */
{
	outline: none;
}

/* CSS used to calculate width of content for input fields */
div.FitUiControlDropDownHidden
{
	position: absolute;
	visibility: hidden;

	/* Reduce risk of element affecting viewport dimensions,
	   which could potentially cause scrolling (X and Y). A very
	   large value will still produce horizontal scrolling though.*/
	top: 0px;
	left: 0px;
}
div.FitUiControlDropDownHidden span
{
	white-space: pre;
}

div.FitUiControlDropDownItems input
{
	/* Make input adopt font settings which must be exactly identical to font settings applied to hidden
	   span. Otherwise content width calculated using hidden span will not work properly with input control.
	   See fitWidthToContent(..) function in DropDown menu control for details. */
	font-family: inherit;
	font-size: inherit;
	font-style: inherit;
	font-weight: inherit;

	width: 5px;

	border-style: none;
	outline: none;

	margin: 0px;
	padding: 0px;

	/* Vertically align with selection */
	vertical-align: middle;
	padding: 0.15em 0em;
}

div.FitUiControlDropDownItems > input
{
	margin-top: 0.05em;		/* Align input vertically */
	margin-top: 0\9;		/* Equal height for all controls not enabled in legacy IE where controls assume height of content instead - unset margin */
}
div.FitUiControlDropDown[data-multiselect="true"] div.FitUiControlDropDownItems > input
{
	margin-top: 0.25em;		/* Align input vertically - adjust for smaller font size in Multi Selection Mode */
	margin-top: 0\9;		/* Equal height for all controls not enabled in legacy IE where controls assume height of content instead - unset margin */
}

div.FitUiControlDropDownItems > span > input:first-child /* Left input in selection container */
{
	/* Move left side input into item container's padding area so
	   the content of the container doesn't exceed its max-width */
	margin-left: -5px;
}

div.FitUiControlDropDownItems > span > span + input /* Right input in selection container */
{
	text-align: right;
	padding-right: 1px; /* IE8: Prevent cursor from disappearing */
}

div.FitUiControlDropDownItems input::-ms-clear /* Remove clear button in IE10 - requires true IE10 document mode to work */
{
	display: none;
}

/* Make active input field wrap to new line when entering text in Visual Mode */
div.FitUiControlDropDown[data-selectionmode="visual"] div.FitUiControlDropDownItems > span + input
{
	/* Make sure primary input field does not word wrap when DropDown is squeezed, by taking it out of flow */
	position: absolute;
	position: static\9; /* It doesn't work in legacy IE without a position (x,y) */
}
div.FitUiControlDropDown[data-selectionmode="visual"] div.FitUiControlDropDownItems[data-editing="true"] > input[data-editing="true"]
{
	position: static; /* Undo position:absolute used to prevent "word wrapping" of input (txtPrimary) if control is squeezed */
}
div.FitUiControlDropDown[data-selectionmode="visual"] div.FitUiControlDropDownItems[data-editing="true"] > span + input[data-editing="true"] /* Only if items have been added (span + input) */
{
	/* Indent text in primary input field when it "word wraps", equivalent
	   to width of left and right input controls in selected items */
	padding-left: 5px;
	padding-right: 5px;
}
div.FitUiControlDropDown[data-selectionmode="visual"] div.FitUiControlDropDownItems > span[data-editing="true"]
{
	display: block; /* Make sure item is placed on a separate line in case it floats in front of or next to another item */
}
div.FitUiControlDropDown[data-selectionmode="visual"] div.FitUiControlDropDownItems > span[data-editing="true"] > span
{
	/* Do not assume width:100% for selection when "word wrapping" item (when item container has display:block - see above).
	   If the control is 800px wide, then the item being "word wrapped" will also assume this width, even if the title is short.
	   Unfortunately this also results in text-overflow being disabled, as it requires a width being set. But it's better than
	   a short item assuming the full width of the control.
	   However, this may also result in the item becoming wider than control, which in turn results in the item becoming partially
	   hidden (right side input field will be hidden due to overflow). But that's fine - it doesn't pose a problem. The user can
	   still TAB navigate to the input field that has been hidden due to overflow as it becomes visible again on TAB press. */
	width: auto;
}
div.FitUiControlDropDown[data-selectionmode="visual"] div.FitUiControlDropDownItems[data-editing="true"] > input[data-editing="true"],
div.FitUiControlDropDown[data-selectionmode="visual"] div.FitUiControlDropDownItems > span[data-editing="true"] > input[data-editing="true"]
{
	/* Place active input field on separate line - "word wrap" input */
	display: block;
	width: 100%;
}
div.FitUiControlDropDown[data-selectionmode="visual"] div.FitUiControlDropDownItems > span[data-editing="true"] > span:after
{
	/* When the input field "word wraps" (see above), it no longer affects the calculation of max-width
	   for the selected item's container, so we will see that it shrinks the width of the input field.
	   To compensate for this, we introduce a hidden element within the item that takes up the same amount
	   of space as the input field before it was wrapped to a new line. */
	content: "";
	display: inline-block;
	width: 5px;
	height: 1em;
}
div.FitUiControlDropDown[data-selectionmode="visual"] div.FitUiControlDropDownItems > span[data-editing="true"] > span + input[data-editing="true"] /* Right input in selection container */
{
	/* Undo right aligment */
	text-align: left;
	padding-right: 0px; /* Undo IE8 fix to make sure text cursor does not disappear when text is aligned to the right */
}
div.FitUiControlDropDown[data-selectionmode="visual"] div.FitUiControlDropDownItems > span[data-editing="true"] > input[data-editing="true"]:first-child
{
	/* If typing into left input field, make sure it is properly indented, equivalent to the indentation of selected items */
	margin-left: 0px; /* Undo negative margin used to move input field into selection container's padding area */
}

/* Placeholder (not enabled on IE8/9) */
/* Placeholder attributes are only set when placeholder is supposed to
   be displayed. The text color for placeholders is defined i Styles.css. */
div.FitUiControlDropDownItems[data-placeholder-autoclear="false"]:after,
div.FitUiControlDropDown[data-focused="false"] div.FitUiControlDropDownItems[data-placeholder-autoclear="true"]:after
{
	content: attr(data-placeholder);
}
div.FitUiControlDropDownItems[data-placeholder]:after
{
	/* Position above input field */
	position: absolute;
	left: 0.3em;
	top: 0.35em;
	top: 0\9;
	width: calc(100% - 0.3em - 2em); /* 0.3em is padding-left in control, 2em is the width of the dropdown arrow - calc requires IE9+ */
	white-space: nowrap;
	overflow: hidden;
}

div.FitUiControlDropDownPicker /* Picker container (drop down) */
{
	background-color: white;
	border: 0.065em solid #BBBBBB;
	border-width: 1px\9;
	border-radius: 2px;
	margin-top: -0.065em;
	margin-top: -1px\9;
	display: none;
	min-height: 10px;

	position: absolute;
	width: 100%;
	z-index: 1000;
}

/* Error indication */
div.FitUiControlDropDown[data-enabled="true"][data-valid="false"]
{
	outline: none;
}
div.FitUiControlDropDown[data-enabled="true"][data-valid="false"] div.FitUiControlDropDownItems
{
	border-color: red;
}
div.FitUiControlDropDown[data-enabled="true"][data-valid="false"] div.FitUiControlDropDownPicker
{
	border-top-color: red;
}

/* Drag and drop */

div.FitUiControlDropDownItems > span.FitDragDropDragging input
{
	visibility: hidden;
}

div.FitUiControlDropDownItems > span[data-dropping]
{
	position: relative;
}
div.FitUiControlDropDownItems > span[data-dropping="left"] > span:before,
div.FitUiControlDropDownItems > span[data-dropping="right"] > span:after
{
	content: "";
	display: inline-block;
	background: red;
	position: absolute;
	top: 0px;
	bottom: 0px;
	width: 2px;
}
div.FitUiControlDropDownItems > span[data-dropping="left"] > span:before
{
	left: -1px;
}
div.FitUiControlDropDownItems > span[data-dropping="right"] > span:after
{
	right: -1px;
}

div.FitUiControlDropDown[data-multiselect="false"] div.FitUiControlDropDownItems > span.FitDragDropDraggable
{
	cursor: text; /* Do not reveal that item is draggable in Single Selection Mode */
}

/* PickerBase */

div.FitUiControlDropDownPicker > *
{
	display: block; /* Make sure picker consumes the entire width of drop down (ControlBase is inline-block) */
}

/* Alternative rendering - Text Selection Mode */

div.FitUiControlDropDown[data-selectionmode="text"] div.FitUiControlDropDownItems > span
{
	display: none; /* Hide selected items - will be represented using text instead */
}
div.FitUiControlDropDown[data-selectionmode="text"] div.FitUiControlDropDownItems > input
{
	font-size: 1em;
	width: 100%;
	margin-top: 0.1em;
	margin-top: 0\9; /* Equal height for all controls not enabled in legacy IE where controls assume height of content instead - unset margin */
}
div.FitUiControlDropDown[data-selectionmode="text"][data-focused="false"] div.FitUiControlDropDownItems > input
{
	text-overflow: ellipsis;
}

/* Selection Mode toggle button (switch between Text and Visual Selection Mode) */

div.FitUiControlDropDown > span.fa
{
	position: absolute;
	top: 0.5em;
	right: -1.5em;
}
div.FitUiControlDropDown[data-selectionmodetoggle="true"]
{
	margin-right: 2em;
}