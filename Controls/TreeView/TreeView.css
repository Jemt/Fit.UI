/* General */

/* Prevent text selection */
div.FitUiControlTreeView
{
	text-align: left; /* To prevent incorrect rendering if parent container has text-align:right */

	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;

	/* Picker Control */
	overflow-y: auto;
	overflow-x: hidden;
}

/* Reset bullet list */
div.FitUiControlTreeView li
{
	list-style-type: none;
}
div.FitUiControlTreeView ul
{
	padding: 0px;
	margin: 0px;
}

/* Advanced */
div.FitUiControlTreeView li ul li
{
	position: relative;		/* Allow absolute positioning within node */
	white-space: nowrap;	/* Disable word wrap */
	line-height: 1.5em;		/* Ensure horizontal spacing between nodes */
	padding-left: 1.5em;	/* Indent content to make room for expand/collapse button */
}

/* Expand/collapse button */

div.FitUiControlTreeView li ul li > div
{
	position: absolute;
	left: 0px;

	/***display: inline-block;***/
	cursor: pointer;
	font-family: FontAwesome;

	/* Increase hit zone */
	width: 1.5em;
	text-align: center;
}
div.FitUiControlTreeView li ul li > div:before
{
	content: "";
}
div.FitUiControlTreeView li ul li[data-state="expanded"] > div:before
{
	content: "\f0d7";
}
div.FitUiControlTreeView li ul li[data-state="expanded"] > ul
{
	display: block;
}
div.FitUiControlTreeView li ul li[data-state="collapsed"] > div:before
{
	content: "\f0da";
}
div.FitUiControlTreeView li ul li[data-state="collapsed"] > ul
{
	display: none;
}

/* Checkbox */

div.FitUiControlTreeView li ul li > input
{
	/* Take checkbox out of flow to prevent it from affecting node title indentation.
       This ensures that all node titles are neatly aligned, even when checkboxes
       are enabled for some nodes, and not for others (mixed configuration). */
	position: absolute;

	font-size: inherit;
	width: 1em;
	height: 1em;
	top: 0.25em;
	margin: 0px;
	padding: 0px;
}

@media /* Wrapped in nested media queries to prevent targeting all versions of IE where the checkbox cannot be styled */
{
	@media
	{
		/* Make checkbox look identical across browsers */
		/* Targeting only checkboxes since some apps are known to change
		   the input type to radio, even though that's completely unsupported. */

		div.FitUiControlTreeView li ul li > input[type="checkbox"]
		{
			appearance: none;
			-moz-appearance: none; /* Firefox (version 54 required for checkbox styling) */
			-webkit-appearance: none; /* Safari and Chrome */

			/* Copied from Fit.UI checkbox control */
			border: 1px solid #909090;
			border-radius: 0.1em; /* 2px */
			color: #333333;
			background-color: #FFFFFF;

			/* Copied from fa class (Font Awesome) */
			display: inline-block;
			font: normal normal normal 14px/1 FontAwesome;
			font-size: inherit;
			text-rendering: auto;
			-webkit-font-smoothing: antialiased;
			-moz-osx-font-smoothing: grayscale;
		}

		div.FitUiControlTreeView li ul li[data-selectable="false"] > input[type="checkbox"]
		{
			background-color: #E8E8E8;
		}

		div.FitUiControlTreeView li ul li > input[type="checkbox"]:focus
		{
			outline: none;
		}

		/* This is a bit controversial since pseudo elements are not supported
		   on form elements - it is only supported on containers. But this actually
		   works on Chrome, Safari, and Firefox 54+.
		   Microsoft has it in the backlog for Edge as well:
		   https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11947102 */
		div.FitUiControlTreeView li ul li > input[type="checkbox"]:checked:before
		{
			content: "\f00c";

			/* Compensate for 1px border */
			position: relative;
			top: -1px;
			left: -1px;
		}

		/* Disable styling on Edge which as of version 15 doesn't work well with the pseudo element.
		   https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11947102
		   MS Edge CSS work arounds:
		   https://jeffclayton.wordpress.com/2015/04/07/css-hacks-for-windows-10-and-spartan-browser-preview */
		_:-ms-lang(x), div.FitUiControlTreeView li ul li > input[type="checkbox"] { -webkit-appearance: checkbox; }
	}
}

/* Node title */

div.FitUiControlTreeView li ul li > span
{
	cursor: pointer;
}

/* Indent node title if checkboxes are enabled.
   Notice: Node title is ALWAYS indented if TreeView is in Multi Selection mode, to make sure node titles are always vertically aligned
           if some nodes have checkboxes, and some do not. It looks odd If all checkboxes are disabled, though, since it leaves a big gap.
           Node title is ALWAYS indented if TreeView is in Single Selection mode, and a checkbox is injected in front of node title to prevent
           title from being hidden underneath checkbox, but primarily to allow all nodes to have a checkbox in Single Selection mode. */
div.FitUiControlTreeView[data-multiselect="true"] li ul li > span,
div.FitUiControlTreeView[data-multiselect="false"] li ul li > input + span
{
	margin-left: 1.25em;
}

/* Helper lines */
/* NOTICE: This doesn't scale well with big fonts!
   Line-height and images will require adjustments! */

div.FitUiControlTreeViewLines li ul li
{
	line-height: 20px; /* Height of background image */
	background: url("Controls/TreeView/gfxLine.png") repeat-y;
}
div.FitUiControlTreeViewLines li ul li[data-last="true"]
{
	background-size: 1px 10px; /* background height = line-height/2 */
	background-repeat: no-repeat;
}
div.FitUiControlTreeViewLines li ul li:before
{
	content: "";
	background: url("Controls/TreeView/gfxNode.png") no-repeat;
	position: absolute;
	left: 0px;
	top: 10px; /* line-height/2 */
	width: 10px; /* BG width */
	height: 1px; /* BG height */
}

/* Push expand/collapse button, checkboxes, and node title to the right to make room for helper lines */
div.FitUiControlTreeViewLines li ul li[data-state="expanded"] > div,
div.FitUiControlTreeViewLines li ul li[data-state="collapsed"] > div
{
	left: 0.6em;
}
div.FitUiControlTreeViewLines li ul li > input, /* Checkboxes */
div.FitUiControlTreeViewLines li ul li > span   /* Node title when checkboxes are not enabled (see below) */
{
	margin-left: 10px; /* gfxNode.png width */
}
div.FitUiControlTreeViewLines[data-multiselect="true"] li ul li > span,
div.FitUiControlTreeViewLines[data-multiselect="false"] li ul li > input + span
{
	margin-left: 28px; /* Changed from 22px, see code further up */
}

/* Dotted helper lines */
div.FitUiControlTreeViewDotLines li ul li
{
	background: url("Controls/TreeView/gfxDotLine.png") repeat-y;
}
div.FitUiControlTreeViewDotLines li ul li:before
{
	background: url("Controls/TreeView/gfxDotNode.png") no-repeat;
}

/* Selection */

div.FitUiControlTreeView li ul li[data-selected="true"] > span
{
	background: #EAEAEA; /* Fallback */
	background: rgba(0, 0, 0, 0.10);
	padding: 0px 2px 0px 2px;
	border: 1px solid silver; /* Fallback */
	border: 1px solid rgba(0, 0, 0, 0.15);
	border-radius: 3px;
}

div.FitUiControlTreeView[data-selectable="true"] li ul li[data-selectable="false"] > span
{
	font-style: italic;
}

/* Focus */

div.FitUiControlTreeView li:focus
{
	outline: none;
}
div.FitUiControlTreeView[data-picker="false"] li ul li:focus > span,
div.FitUiControlTreeView li ul li[data-active="true"] > span
{
	padding: 0px 2px 0px 2px;
	border: 1px solid #419DE1;
	border-radius: 3px;
}

/* Navigation nodes */

div.FitUiControlTreeView li a
{
	text-decoration: inherit;
	color: inherit;
}

/* Word wrap */

div.FitUiControlTreeView[data-wordwrap="true"] li ul li > span
{
	/*display: inline-block;*/
	white-space: normal;
}

/* Hide fake root node */

div.FitUiControlTreeView li[data-value="TREEVIEW_ROOT_NODE"] > *
{
	display: none;
}
div.FitUiControlTreeView li[data-value="TREEVIEW_ROOT_NODE"] > ul
{
	display: block;
}
